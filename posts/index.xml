<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Michael J. Nicholson</title><link>https://michjnich.github.io/posts/</link><description>Recent content in Posts on Michael J. Nicholson</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sat, 11 Mar 2023 12:00:00 +0100</lastBuildDate><atom:link href="https://michjnich.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Scheduling backups with GitLab CI/CD</title><link>https://michjnich.github.io/posts/tech/2023/scheduling-backups-gitlab-ci-cd/</link><pubDate>Sat, 11 Mar 2023 12:00:00 +0100</pubDate><guid>https://michjnich.github.io/posts/tech/2023/scheduling-backups-gitlab-ci-cd/</guid><description>I recently created a small Django project to manage a rolling menu for our family meals. It&amp;rsquo;s not a large project. I&amp;rsquo;m hosting it on a Digital Ocean droplet (for which I pay $4/month, and it runs more than one project), and I have a free-tier Postgres database with ElephantSQL. Because this is only a personal project, I didn&amp;rsquo;t want to pay for the database or any backups there (though my experience so far of ElephantSQL is positive, and for a larger project I may well do this!</description></item><item><title>Email inbox for Django development</title><link>https://michjnich.github.io/posts/tech/2022/2022_12_08_email_inbox_for_django_development/</link><pubDate>Thu, 08 Dec 2022 10:00:00 +0100</pubDate><guid>https://michjnich.github.io/posts/tech/2022/2022_12_08_email_inbox_for_django_development/</guid><description>My current project sends emails. Not a very controversial statement that, as most web projects probably need to send the occasional email.
To make testing during the dev phase easy, I&amp;rsquo;ve configured the project to use the django.core.mail.backends.filebased.EmailBackend backend, which just writes an email to a file in a directory you specify. This means I can just open up the file, read and visually verify the email, and click on any links (eg.</description></item><item><title>Colourblind settings for Git</title><link>https://michjnich.github.io/posts/tech/2022/2022_09_21_colourblind_settings_for_git/</link><pubDate>Wed, 21 Sep 2022 15:00:00 +0200</pubDate><guid>https://michjnich.github.io/posts/tech/2022/2022_09_21_colourblind_settings_for_git/</guid><description>Like around 12% of people on the planet, I am colour-blind. Mine isn&amp;rsquo;t too bad compared to others, and is the common red/green kind (protanopia).
I still like to use colours in my terminals though, as I find the various highlights useful, so I thought I&amp;rsquo;d share the colours I have set up for git to make life easy for me.
Just copy/paste the following into your ~/.gitconfig file, and of course if any of these colours don&amp;rsquo;t work for you, just change them to something that does (mostly what I&amp;rsquo;ve done is get rid of the dark reds and blues, which are very hard for me to see on a blackish terminal background.</description></item><item><title>Debugging Django in a Docker container</title><link>https://michjnich.github.io/posts/tech/2022/2022_09_17_debug_django_in_docker/</link><pubDate>Sun, 18 Sep 2022 09:00:00 +0200</pubDate><guid>https://michjnich.github.io/posts/tech/2022/2022_09_17_debug_django_in_docker/</guid><description>Have you ever tried hunting for a bug in a Django app that&amp;rsquo;s running in a Docker container? It&amp;rsquo;s not always a trivial process and can have you dotting print statements all over the place because you can&amp;rsquo;t figure out how to use breakpoints properly inside the Docker container.
Well, fortunately there is a solution to this. 2 solutions even.
Solution 1: Configure VS Code to debug a dockerised app Step 1 - Configure VS Code VS Code has built in debugging support for a variety of languages.</description></item><item><title>Power-up your DuckDuckGo searches with !bangs</title><link>https://michjnich.github.io/posts/tech/2022/2022_04_06_duckduckgo_bangs/</link><pubDate>Tue, 24 May 2022 15:00:00 +0100</pubDate><guid>https://michjnich.github.io/posts/tech/2022/2022_04_06_duckduckgo_bangs/</guid><description>DuckDuckGo continues to gain ground over Google for searches, not least because it doesn&amp;rsquo;t track you. But is it as efficient as Google, and how can you get more out of it? Here are 5 simple tips:
Make use of !bangs DuckDuckGo has had bangs for years, though I only discovered them recently. Put simply, a bang allows you to perform a search directly on another site, from the DuckDuckGo site.</description></item><item><title>Welcome to v2 of michjnich.com</title><link>https://michjnich.github.io/posts/tech/2022/2022_04_03_welcome_to_v2/</link><pubDate>Sun, 03 Apr 2022 20:00:00 +0100</pubDate><guid>https://michjnich.github.io/posts/tech/2022/2022_04_03_welcome_to_v2/</guid><description>Welcome &amp;hellip; &amp;hellip; to v2 of my personal site.
Version 1 was created using mkdocs and deployed on GitHub pages. Mkdocs is extremely simple to use and a powerful tool, but perhaps not ideal for a more &amp;ldquo;modern&amp;rdquo; looking site. While I could have run a blog using mkdocs, it wasn&amp;rsquo;t entirely practical, and it was for that reason I then set up a seperate tech blog site.
stddev.tech This was actually pretty short lived, mainly because I used the hosted version of Ghost, which was quite expensive for somebody just running a small blog with only a handful of visitors, so when it came time to renew I found it hard to justify.</description></item><item><title>Remote working is not a zero-sum game!</title><link>https://michjnich.github.io/posts/tech/2021/2021_02_25_remote_working/</link><pubDate>Thu, 25 Feb 2021 08:00:00 +0100</pubDate><guid>https://michjnich.github.io/posts/tech/2021/2021_02_25_remote_working/</guid><description>This post was originally published on LinkedIn
Wikipedia describes a zero sum game as:
In game theory and economic theory, a zero-sum game is a mathematical representation of a situation in which each participant&amp;rsquo;s gain or loss of utility is exactly balanced by the losses or gains of the utility of the other participants.
It goes on to compare it with cutting a cake to share amongst a group.</description></item><item><title>What to do with your legacy monolith</title><link>https://michjnich.github.io/posts/tech/2020/2020_12_23_legacy_monolith/</link><pubDate>Wed, 23 Dec 2020 08:00:00 +0100</pubDate><guid>https://michjnich.github.io/posts/tech/2020/2020_12_23_legacy_monolith/</guid><description>This post was originally published on LinkedIn
Are you working at a company that has a legacy monolith that you&amp;rsquo;d like to get rid of?
Are you sure?
Maybe you think you should migrate it to a microservice-based architecture? After all, that&amp;rsquo;s what all the cool kids are using these days, isn&amp;rsquo;t it?
Before you do that, just stop and think a moment about what it is you actually need, and what problems you are trying to solve by considering what I presume would be a fairly major transformation project.</description></item></channel></rss>