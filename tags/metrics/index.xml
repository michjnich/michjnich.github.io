<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>metrics on Michael J. Nicholson</title><link>https://michjnich.github.io/tags/metrics/</link><description>Recent content in metrics on Michael J. Nicholson</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Tue, 19 Sep 2023 15:00:00 +0100</lastBuildDate><atom:link href="https://michjnich.github.io/tags/metrics/index.xml" rel="self" type="application/rss+xml"/><item><title>How to measure developer productivity</title><link>https://michjnich.github.io/posts/tech/2023/measuring-developer-productivity/</link><pubDate>Tue, 19 Sep 2023 15:00:00 +0100</pubDate><guid>https://michjnich.github.io/posts/tech/2023/measuring-developer-productivity/</guid><description>So you&amp;rsquo;re responsible for one or more developers? Of course you want to know how well your developers are performing. That&amp;rsquo;s perfectly understandable. So now you&amp;rsquo;re looking for some metrics you can use to measure their performance.
This is where you&amp;rsquo;re going to have problems &amp;hellip;
First of all, this post is mostly directed at people that have never held a developer role (or perhaps have, but it was a long time ago, and they&amp;rsquo;ve pretty much forgotten what it was like, or the world has changed a bit since then).</description></item></channel></rss>